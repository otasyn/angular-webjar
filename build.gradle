plugins {
  id 'java' // Used for creating jars.
  id 'maven-publish' // Adds newer `publish` task and other stuff.
  id 'com.moowork.node' version '1.3.1' // Used for executing node scripts.
}

group 'org.otasyn.template'
version '0.1.0-SNAPSHOT'

/* Determine if working with a snapshot. */
def isSnapshot = version.endsWith('SNAPSHOT')

node {
   /* https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md#configuring-the-plugin */
   download = false 
}

/**
 * If npm_install is running slow, check the npm config.  It should be:
 *   package-lock=true
 */
task npmBuild {
  if (isSnapshot) {
    println 'Building snapshot.'
    dependsOn npm_run_build
  } else {
    println 'Building production.'
    dependsOn npm_run_buildProd
  }
}

build.dependsOn npmBuild

/**
 * Gather the built sources and package them into a JAR file.
 */
jar {
  dependsOn npmBuild
  if (isSnapshot) {
    from 'dist/angular-webjar/snapshot'
  } else {
    from 'dist/angular-webjar/production'
  }
  into "META-INF/resources/webjars/${archivesBaseName}/${project.version}"
}

/**
 * Instead of using `install` task, now use `publish`, `publishToMavenLocal`, etc.
 */
publishing {
  publications {
    /**
     * Custom PubName of `angularWebjar` will produce custom tasks:
     *   `publishAngularWebjarPublicationToMavenLocal`
     *   `publishAngularWebjarPublicationToTemplateRepoRepository`
     */
    angularWebjar(MavenPublication) {
      from components.java
    }
  }
  repositories {
    /**
     * The URL and credentials should be stored in
     *   `$USER_HOME/.gradle/gradle.properties` or
     *   or other gradle properties location.
     */
    if (project.hasProperty('repoUrl') && repoUrl) {
      maven {
        /* Will be used for creating the publish method. */
        name 'TemplateRepo'

        /* The URLs for release and snapshot repos. */
        def releasesRepoUrl = "${repoUrl}/maven-releases/"
        def snapshotsRepoUrl = "${repoUrl}/maven-snapshots/"

        /* Determine if the build is a snapshot or release and set the URL accordingly. */
        url = isSnapshot ? snapshotsRepoUrl : releasesRepoUrl

        credentials {
          username "${repoUsername}"
          password "${repoPassword}"
        }
      }
    }
  }
}
